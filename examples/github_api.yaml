openapi: 3.0.0
info:
  title: GitHub API (Simplified)
  description: Simplified GitHub API for demonstration
  version: 1.0.0
  
servers:
  - url: https://api.github.com
    description: GitHub API Server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    Repository:
      type: object
      properties:
        id:
          type: integer
          description: Repository ID
        name:
          type: string
          description: Repository name
        full_name:
          type: string
          description: Full repository name
        description:
          type: string
          description: Repository description
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        stargazers_count:
          type: integer
        forks_count:
          type: integer
        language:
          type: string
    
    Issue:
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        title:
          type: string
        state:
          type: string
          enum: [open, closed]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
          nullable: true
        user:
          type: object
          properties:
            id:
              type: integer
            login:
              type: string
    
    PullRequest:
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        title:
          type: string
        state:
          type: string
          enum: [open, closed, merged]
        created_at:
          type: string
          format: date-time
        merged_at:
          type: string
          format: date-time
          nullable: true
        user:
          type: object
          properties:
            id:
              type: integer
            login:
              type: string

paths:
  /repos/{owner}/{repo}:
    get:
      summary: Get a repository
      operationId: getRepository
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
  
  /repos/{owner}/{repo}/issues:
    get:
      summary: List repository issues
      operationId: listIssues
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
            enum: [open, closed, all]
            default: open
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 30
      responses:
        '200':
          description: List of issues
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
  
  /repos/{owner}/{repo}/pulls:
    get:
      summary: List pull requests
      operationId: listPullRequests
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
            enum: [open, closed, all]
            default: open
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 30
      responses:
        '200':
          description: List of pull requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PullRequest'

